// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Research.Domain.Context;

#nullable disable

namespace Research.Domain.Migrations
{
    [DbContext(typeof(ResearchContext))]
    [Migration("20220608135135_addedMatchTable")]
    partial class addedMatchTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Research.Domain.Entity.Language", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            LanguageId = new Guid("1e2efdac-2e17-4a6d-8929-de39b9db5d54"),
                            Code = 1,
                            Description = "English"
                        },
                        new
                        {
                            LanguageId = new Guid("b002104e-1ad5-417a-8fe5-8587a87dc9df"),
                            Code = 2,
                            Description = "French"
                        },
                        new
                        {
                            LanguageId = new Guid("47ed2fcf-5310-484b-b2ab-4686e78d8225"),
                            Code = 3,
                            Description = "German"
                        },
                        new
                        {
                            LanguageId = new Guid("c07d3a0b-b93c-4d6d-b6b5-646f91ca8aa8"),
                            Code = 4,
                            Description = "Spanish"
                        },
                        new
                        {
                            LanguageId = new Guid("0bd1d2c8-7c52-471f-bb03-1148aa7be952"),
                            Code = 5,
                            Description = "Italian"
                        },
                        new
                        {
                            LanguageId = new Guid("ffda6091-71b5-4b22-8d8d-0a3882aa5524"),
                            Code = 6,
                            Description = "Portuguese"
                        },
                        new
                        {
                            LanguageId = new Guid("c3ccfdc4-807b-4769-b4c6-2b7081ec60b2"),
                            Code = 7,
                            Description = "Russian"
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.LanguageLevel", b =>
                {
                    b.Property<Guid>("LanguageLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageLevelId");

                    b.ToTable("LanguageLevel");

                    b.HasData(
                        new
                        {
                            LanguageLevelId = new Guid("6bc54b48-f5a7-4b17-a3b9-a59a8d4ed990"),
                            Code = 1,
                            Description = "Beginner"
                        },
                        new
                        {
                            LanguageLevelId = new Guid("ca1c7e34-9d3b-4baf-9c7d-5bc4dfb03360"),
                            Code = 2,
                            Description = "Elementary"
                        },
                        new
                        {
                            LanguageLevelId = new Guid("837f6f53-731c-4ee4-8121-5f4baf9a5471"),
                            Code = 3,
                            Description = "Pre-Intermediate"
                        },
                        new
                        {
                            LanguageLevelId = new Guid("8c20c694-be30-4294-890e-aacd0d1f5cf7"),
                            Code = 4,
                            Description = "Intermediate"
                        },
                        new
                        {
                            LanguageLevelId = new Guid("fa028f12-c30a-497c-8e4a-072eb567483f"),
                            Code = 5,
                            Description = "Upper-Intermediate"
                        },
                        new
                        {
                            LanguageLevelId = new Guid("6b7b2537-ecc6-48d6-8135-fce805efb951"),
                            Code = 6,
                            Description = "Advanced"
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.LanguageLink", b =>
                {
                    b.Property<Guid>("LanguageLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LanguageLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Preferred")
                        .HasColumnType("bit");

                    b.HasKey("LanguageLinkId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LanguageLevelId");

                    b.HasIndex("PersonId");

                    b.ToTable("LanguageLink");

                    b.HasData(
                        new
                        {
                            LanguageLinkId = new Guid("d2239273-d1e3-4dcc-8e7f-c46781b37c8e"),
                            LanguageId = new Guid("1e2efdac-2e17-4a6d-8929-de39b9db5d54"),
                            LanguageLevelId = new Guid("837f6f53-731c-4ee4-8121-5f4baf9a5471"),
                            PersonId = new Guid("9c1d3dfa-de29-4ea8-bb6b-1443d4a3160b"),
                            Preferred = true
                        },
                        new
                        {
                            LanguageLinkId = new Guid("a6f745e4-7ecd-48c5-b418-22fab250a256"),
                            LanguageId = new Guid("b002104e-1ad5-417a-8fe5-8587a87dc9df"),
                            LanguageLevelId = new Guid("6b7b2537-ecc6-48d6-8135-fce805efb951"),
                            PersonId = new Guid("9c1d3dfa-de29-4ea8-bb6b-1443d4a3160b"),
                            Preferred = false
                        },
                        new
                        {
                            LanguageLinkId = new Guid("6a820aec-c77a-47d9-a54f-0c85abb2d0f6"),
                            LanguageId = new Guid("47ed2fcf-5310-484b-b2ab-4686e78d8225"),
                            LanguageLevelId = new Guid("6bc54b48-f5a7-4b17-a3b9-a59a8d4ed990"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Preferred = true
                        },
                        new
                        {
                            LanguageLinkId = new Guid("f583c77b-6749-45bc-a052-0b8b6f85e0ac"),
                            LanguageId = new Guid("c07d3a0b-b93c-4d6d-b6b5-646f91ca8aa8"),
                            LanguageLevelId = new Guid("ca1c7e34-9d3b-4baf-9c7d-5bc4dfb03360"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Preferred = false
                        },
                        new
                        {
                            LanguageLinkId = new Guid("8c7e3f2a-5e37-4592-8f65-28cd9dc4eae2"),
                            LanguageId = new Guid("0bd1d2c8-7c52-471f-bb03-1148aa7be952"),
                            LanguageLevelId = new Guid("837f6f53-731c-4ee4-8121-5f4baf9a5471"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Preferred = true
                        },
                        new
                        {
                            LanguageLinkId = new Guid("65e7172e-da9d-4124-b78c-65f7c14eb9ba"),
                            LanguageId = new Guid("ffda6091-71b5-4b22-8d8d-0a3882aa5524"),
                            LanguageLevelId = new Guid("8c20c694-be30-4294-890e-aacd0d1f5cf7"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Preferred = false
                        },
                        new
                        {
                            LanguageLinkId = new Guid("4dd2e64c-9a8a-462f-ac5e-d0430ff8b22f"),
                            LanguageId = new Guid("c3ccfdc4-807b-4769-b4c6-2b7081ec60b2"),
                            LanguageLevelId = new Guid("fa028f12-c30a-497c-8e4a-072eb567483f"),
                            PersonId = new Guid("f888e8c4-9401-44e0-9ec6-65867b249889"),
                            Preferred = true
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.Match", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("MatchAcceptedByEmployee")
                        .HasColumnType("bit");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResearchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ResearchId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Research.Domain.Entity.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecruiter")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Remote")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surnamme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("SiteId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("9c1d3dfa-de29-4ea8-bb6b-1443d4a3160b"),
                            Code = 1,
                            IsRecruiter = false,
                            Name = "Nicoletta",
                            Position = "dev",
                            Remote = false,
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1"),
                            Surnamme = "Morsia",
                            YearsOfExperience = 2
                        },
                        new
                        {
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Code = 2,
                            IsRecruiter = true,
                            Name = "Mario",
                            Position = "recuiter",
                            Remote = true,
                            SiteId = new Guid("4e145946-4c21-4f2e-a8ba-ed4ee29929f9"),
                            Surnamme = "Rossi",
                            YearsOfExperience = 2
                        },
                        new
                        {
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Code = 3,
                            IsRecruiter = true,
                            Name = "Mario",
                            Position = "recruiter",
                            Remote = false,
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1"),
                            Surnamme = "Rossi",
                            YearsOfExperience = 2
                        },
                        new
                        {
                            PersonId = new Guid("f888e8c4-9401-44e0-9ec6-65867b249889"),
                            Code = 4,
                            IsRecruiter = false,
                            Name = "Mario",
                            Position = "dev",
                            Remote = true,
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1"),
                            Surnamme = "Rossi",
                            YearsOfExperience = 2
                        },
                        new
                        {
                            PersonId = new Guid("92a8316e-08d8-4939-b974-90e6e36e6db8"),
                            Code = 5,
                            IsRecruiter = false,
                            Name = "Giovanni",
                            Position = "dev",
                            Remote = true,
                            SiteId = new Guid("b0bd4bf1-d769-4fef-a2c9-ee8596841566"),
                            Surnamme = "Bianchi",
                            YearsOfExperience = 4
                        },
                        new
                        {
                            PersonId = new Guid("2775d42e-c6f6-417b-8860-7e21419c5718"),
                            Code = 6,
                            IsRecruiter = false,
                            Name = "Alessandra",
                            Position = "dev",
                            Remote = true,
                            SiteId = new Guid("4e145946-4c21-4f2e-a8ba-ed4ee29929f9"),
                            Surnamme = "Verdi",
                            YearsOfExperience = 15
                        },
                        new
                        {
                            PersonId = new Guid("6297cf87-08b5-49b6-9ca6-0dc0af6a3d21"),
                            Code = 7,
                            IsRecruiter = false,
                            Name = "Giovanni",
                            Position = "dev",
                            Remote = true,
                            SiteId = new Guid("55c0aaa0-6c28-48c9-935c-a7535c79fb77"),
                            Surnamme = "Novembre",
                            YearsOfExperience = 1
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.Research", b =>
                {
                    b.Property<Guid>("ResearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Remote")
                        .HasColumnType("bit");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ResearchId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SiteId");

                    b.ToTable("Research");

                    b.HasData(
                        new
                        {
                            ResearchId = new Guid("807982ab-bd68-4fde-aa7d-64ad6bbc53d1"),
                            Code = 1,
                            Description = "Front end Angular",
                            LanguageId = new Guid("1e2efdac-2e17-4a6d-8929-de39b9db5d54"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Remote = true,
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1")
                        },
                        new
                        {
                            ResearchId = new Guid("82cc01c6-065a-429c-9d0e-fa28751d318b"),
                            Code = 2,
                            Description = "Back end .NET",
                            LanguageId = new Guid("b002104e-1ad5-417a-8fe5-8587a87dc9df"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Remote = true,
                            SiteId = new Guid("4e145946-4c21-4f2e-a8ba-ed4ee29929f9")
                        },
                        new
                        {
                            ResearchId = new Guid("de9d58a6-955e-47be-88e2-0d4ce751cfc5"),
                            Code = 3,
                            Description = "Typescript",
                            LanguageId = new Guid("1e2efdac-2e17-4a6d-8929-de39b9db5d54"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Remote = true,
                            SiteId = new Guid("b0bd4bf1-d769-4fef-a2c9-ee8596841566")
                        },
                        new
                        {
                            ResearchId = new Guid("1924e1c8-d73f-4d5c-85d2-ae4f584869f6"),
                            Code = 4,
                            Description = "Azure",
                            LanguageId = new Guid("47ed2fcf-5310-484b-b2ab-4686e78d8225"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Remote = false,
                            SiteId = new Guid("876e1396-13f7-40e3-8b12-b03cd709b762")
                        },
                        new
                        {
                            ResearchId = new Guid("77959fdd-8bd0-47ed-a8c6-6a73ebfaa6b4"),
                            Code = 5,
                            Description = "Smss",
                            LanguageId = new Guid("c07d3a0b-b93c-4d6d-b6b5-646f91ca8aa8"),
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            Remote = false,
                            SiteId = new Guid("55c0aaa0-6c28-48c9-935c-a7535c79fb77")
                        },
                        new
                        {
                            ResearchId = new Guid("d6525414-1c05-4e85-a79e-7d5239f60cd9"),
                            Code = 6,
                            Description = "Back end .NET",
                            LanguageId = new Guid("0bd1d2c8-7c52-471f-bb03-1148aa7be952"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Remote = true,
                            SiteId = new Guid("4e145946-4c21-4f2e-a8ba-ed4ee29929f9")
                        },
                        new
                        {
                            ResearchId = new Guid("ae21848a-7f01-4e8c-93af-970dfa4fa004"),
                            Code = 7,
                            Description = "Azure",
                            LanguageId = new Guid("c07d3a0b-b93c-4d6d-b6b5-646f91ca8aa8"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Remote = true,
                            SiteId = new Guid("876e1396-13f7-40e3-8b12-b03cd709b762")
                        },
                        new
                        {
                            ResearchId = new Guid("a1c20840-6b3e-44d6-8f66-6e04b8253f20"),
                            Code = 8,
                            Description = "Flutter",
                            LanguageId = new Guid("ffda6091-71b5-4b22-8d8d-0a3882aa5524"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Remote = true,
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1")
                        },
                        new
                        {
                            ResearchId = new Guid("e7dcd6c2-e80a-438e-ad7a-a85027029a62"),
                            Code = 9,
                            Description = "Back end .NET",
                            LanguageId = new Guid("c3ccfdc4-807b-4769-b4c6-2b7081ec60b2"),
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            Remote = true,
                            SiteId = new Guid("55c0aaa0-6c28-48c9-935c-a7535c79fb77")
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.Site", b =>
                {
                    b.Property<Guid>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiteId");

                    b.ToTable("Site");

                    b.HasData(
                        new
                        {
                            SiteId = new Guid("73ba69e6-a7ad-483d-84b9-4cda53e34fe1"),
                            Code = 1,
                            Description = "NEW YORK"
                        },
                        new
                        {
                            SiteId = new Guid("4e145946-4c21-4f2e-a8ba-ed4ee29929f9"),
                            Code = 2,
                            Description = "CHICAGO"
                        },
                        new
                        {
                            SiteId = new Guid("b0bd4bf1-d769-4fef-a2c9-ee8596841566"),
                            Code = 3,
                            Description = "WASHINGTON"
                        },
                        new
                        {
                            SiteId = new Guid("876e1396-13f7-40e3-8b12-b03cd709b762"),
                            Code = 4,
                            Description = "LOS ANGELES"
                        },
                        new
                        {
                            SiteId = new Guid("55c0aaa0-6c28-48c9-935c-a7535c79fb77"),
                            Code = 5,
                            Description = "LONDON"
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.Skill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FEBEDevops")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("Skill");

                    b.HasData(
                        new
                        {
                            SkillId = new Guid("3d955909-eba7-4e66-8240-6333ba2cbf02"),
                            Code = 1,
                            Description = "Angular 9",
                            FEBEDevops = "",
                            ProjectRef = "",
                            Technology = "",
                            WebMobile = "angular"
                        },
                        new
                        {
                            SkillId = new Guid("ca36c889-16c3-4d59-a702-f648993e5344"),
                            Code = 2,
                            Description = "TS",
                            FEBEDevops = "",
                            ProjectRef = "",
                            Technology = "",
                            WebMobile = "typescript"
                        },
                        new
                        {
                            SkillId = new Guid("389a1adc-08cd-48a8-8997-c0ec04a05b5f"),
                            Code = 3,
                            Description = "Azure",
                            FEBEDevops = "Azure",
                            ProjectRef = "",
                            Technology = "",
                            WebMobile = ""
                        },
                        new
                        {
                            SkillId = new Guid("c394cfbc-a4e0-4a9e-9f15-8d4ce3870c98"),
                            Code = 4,
                            Description = "Flutter",
                            FEBEDevops = "",
                            ProjectRef = "",
                            Technology = "",
                            WebMobile = "Flutter"
                        },
                        new
                        {
                            SkillId = new Guid("cb655180-1a9d-4627-8bf3-35fade999f03"),
                            Code = 5,
                            Description = "Iot",
                            FEBEDevops = "",
                            ProjectRef = "",
                            Technology = "Iot",
                            WebMobile = ""
                        },
                        new
                        {
                            SkillId = new Guid("d436a51e-5040-4c40-9c8c-1ad749fc6c4b"),
                            Code = 6,
                            Description = ".NET",
                            FEBEDevops = ".NET",
                            ProjectRef = "",
                            Technology = "",
                            WebMobile = ""
                        },
                        new
                        {
                            SkillId = new Guid("773db846-42a3-4e36-8b2d-70d3404fad4e"),
                            Code = 7,
                            Description = "SMSS",
                            FEBEDevops = "",
                            ProjectRef = "",
                            Technology = "SSMS",
                            WebMobile = ""
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.SkillLink", b =>
                {
                    b.Property<Guid>("SkillLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillLinkId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillLink");

                    b.HasData(
                        new
                        {
                            SkillLinkId = new Guid("c70e9d79-60f5-4e93-b2d2-21cfccd0b9b4"),
                            Level = 1,
                            PersonId = new Guid("9c1d3dfa-de29-4ea8-bb6b-1443d4a3160b"),
                            SkillId = new Guid("3d955909-eba7-4e66-8240-6333ba2cbf02")
                        },
                        new
                        {
                            SkillLinkId = new Guid("2372bce7-fbb1-48d3-9acc-35c73691d6fa"),
                            Level = 2,
                            PersonId = new Guid("9c1d3dfa-de29-4ea8-bb6b-1443d4a3160b"),
                            SkillId = new Guid("ca36c889-16c3-4d59-a702-f648993e5344")
                        },
                        new
                        {
                            SkillLinkId = new Guid("d32b47ca-334f-40b6-a552-bec9aedeefc4"),
                            Level = 3,
                            PersonId = new Guid("ebfce3c9-342c-4c36-b585-7028647653e1"),
                            SkillId = new Guid("389a1adc-08cd-48a8-8997-c0ec04a05b5f")
                        },
                        new
                        {
                            SkillLinkId = new Guid("2de3cd15-f0ba-4d9b-a78e-38d04fc1d609"),
                            Level = 1,
                            PersonId = new Guid("98851f86-9dc5-4a96-9258-8a80c35abbcd"),
                            SkillId = new Guid("c394cfbc-a4e0-4a9e-9f15-8d4ce3870c98")
                        },
                        new
                        {
                            SkillLinkId = new Guid("d276e241-a4f5-40de-89a1-690735c0ec00"),
                            Level = 6,
                            PersonId = new Guid("f888e8c4-9401-44e0-9ec6-65867b249889"),
                            SkillId = new Guid("cb655180-1a9d-4627-8bf3-35fade999f03")
                        },
                        new
                        {
                            SkillLinkId = new Guid("0b20f2af-c902-43bb-b985-a6f57be93230"),
                            Level = 3,
                            PersonId = new Guid("f888e8c4-9401-44e0-9ec6-65867b249889"),
                            SkillId = new Guid("d436a51e-5040-4c40-9c8c-1ad749fc6c4b")
                        },
                        new
                        {
                            SkillLinkId = new Guid("8fbee0c9-7bc1-42bf-8810-beba19ef8f8c"),
                            Level = 2,
                            PersonId = new Guid("f888e8c4-9401-44e0-9ec6-65867b249889"),
                            SkillId = new Guid("389a1adc-08cd-48a8-8997-c0ec04a05b5f")
                        },
                        new
                        {
                            SkillLinkId = new Guid("d844f4fd-39c2-465b-a4f5-f8230b35490d"),
                            Level = 2,
                            PersonId = new Guid("92a8316e-08d8-4939-b974-90e6e36e6db8"),
                            SkillId = new Guid("773db846-42a3-4e36-8b2d-70d3404fad4e")
                        });
                });

            modelBuilder.Entity("Research.Domain.Entity.LanguageLink", b =>
                {
                    b.HasOne("Research.Domain.Entity.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Domain.Entity.LanguageLevel", "LanguageLevel")
                        .WithMany()
                        .HasForeignKey("LanguageLevelId");

                    b.HasOne("Research.Domain.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LanguageLevel");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Research.Domain.Entity.Match", b =>
                {
                    b.HasOne("Research.Domain.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Domain.Entity.Research", "Research")
                        .WithMany()
                        .HasForeignKey("ResearchId");

                    b.Navigation("Person");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Research.Domain.Entity.Person", b =>
                {
                    b.HasOne("Research.Domain.Entity.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Research.Domain.Entity.Research", b =>
                {
                    b.HasOne("Research.Domain.Entity.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Domain.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Domain.Entity.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Person");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Research.Domain.Entity.SkillLink", b =>
                {
                    b.HasOne("Research.Domain.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Research.Domain.Entity.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
